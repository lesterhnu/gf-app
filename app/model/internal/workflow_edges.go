// ==========================================================================
// This is auto-generated by gf cli tool. DO NOT EDIT THIS FILE MANUALLY.
// ==========================================================================

package internal

import (
    "github.com/gogf/gf/os/gtime"
)

// WorkflowEdges is the golang structure for table workflow_edges.
type WorkflowEdges struct {
    Id                  string      `orm:"id,primary"           json:"id"`                  // 唯一标识    
    CreatedAt           *gtime.Time `orm:"created_at"           json:"createdAt"`           //             
    UpdatedAt           *gtime.Time `orm:"updated_at"           json:"updatedAt"`           //             
    DeletedAt           *gtime.Time `orm:"deleted_at"           json:"deletedAt"`           //             
    WorkflowProcessId   string      `orm:"workflow_process_id"  json:"workflowProcessId"`   // 流程标识    
    Clazz               string      `orm:"clazz"                json:"clazz"`               // 类型（线）  
    Source              string      `orm:"source"               json:"source"`              // 起点节点    
    Target              string      `orm:"target"               json:"target"`              // 目标节点    
    SourceAnchor        int64       `orm:"source_anchor"        json:"sourceAnchor"`        // 起点        
    TargetAnchor        int64       `orm:"target_anchor"        json:"targetAnchor"`        // 目标点      
    Description         string      `orm:"description"          json:"description"`         // 详细介绍    
    Shape               string      `orm:"shape"                json:"shape"`               // 形状        
    Label               string      `orm:"label"                json:"label"`               // 标题        
    HideIcon            int         `orm:"hide_icon"            json:"hideIcon"`            // 隐藏图标    
    ConditionExpression string      `orm:"condition_expression" json:"conditionExpression"` // 条件标识    
    Seq                 string      `orm:"seq"                  json:"seq"`                 // 序号        
    Reverse             int         `orm:"reverse"              json:"reverse"`             // 是否反向    
}